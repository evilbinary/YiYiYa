# coding:utf-8
# *******************************************************************
# * Copyright 2021-2080 evilbinary
# * 作者: evilbinary on 01/01/20
# * 邮箱: rootdebug@163.com
# ********************************************************************
import os

Import('env')               


env.GenerateKernelSize('config.h',['../../init/kernel'])

env.Object('boot', ['boot_'+env['ARCH']+'.s'],ASFLAGS='')

linkflags='-nostdlib -nostartfiles -T boot/arm/link.ld'

source=[ 
    'boot.o',
    'init.c',]

if env['PLATFORM']=='stm32f4xx':
    linkflags='-nostdlib -nostartfiles -T boot/arm/link-stm32f4xx.ld'
    source=['init.c']

env.Program(target ='init.elf', source = source+[
   
    # 'test.o',
    # 'kernel.c',
    env.get('MYLIB')
    ],
    CFLAGS='$CFLAGS -I. -Iinclude',
    LINKFLAGS= linkflags)

env.Objcopy('init.bin','init.elf',OBJCOPYFLAGS='-O binary -S --strip-debug')